// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`litmus large rules file from moltres project 1`] = `"rules_version='2';service cloud.firestore{match/databases/{database}/documents{function props(properties,obj){return[obj.get(properties[0],null),obj.get(properties[1%properties.size()],null),obj.get(properties[2%properties.size()],null)][0:properties.size()]}function currentUserIsValid(auth){let user=get(/$(/databases/$(database)/documents)/Users/$(auth.uid));return user!=null&&user.data.state=='valid';}function currentUserHasAdminRole(auth){let role=getUserRoleBefore(auth.uid);return role!=null&&role.data.role=='admin';}function currentUserHasHilRole(auth){let role=getUserRoleBefore(auth.uid);return role!=null&&role.data.role=='hil';}function userIdEqualsAuthServiceAccountId(auth,userId){let serviceAccount=get(/$(/databases/$(database)/documents)/ServiceAccounts/$(userId));return serviceAccount!=null&&serviceAccount.id==auth.token.serviceAccountId;}function currentUserIsServiceAccount(auth){return(auth!=null&&auth.uid!=null)&&(auth.token!=null&&auth.token.keys().hasAll(['serviceAccountId']))&&userIdEqualsAuthServiceAccountId(auth,auth.uid)}function pluralize(str){return{'AccessToken':'AccessTokens','Action':'Actions','ChannelContext':'ChannelContexts','Conversation':'Conversations','ConversationMember':'ConversationMembers','ConversationMessage':'ConversationMessages','EntityStats':'EntityStats','Error':'Errors','Host':'Hosts','Image':'Images','Index':'Indexes','InternalPhoneNumber':'InternalPhoneNumbers','List':'Lists','ListEntity':'ListEntities','Notification':'Notifications','NotificationSend':'NotificationSends','PhoneNumber':'PhoneNumbers','PhoneNumberClaim':'PhoneNumberClaims','Preference':'Preferences','Queue':'Queues','QueueEntity':'QueueEntities','ServiceAccount':'ServiceAccounts','SMSChallenge':'SMSChallenges','SMSChannel':'SMSChannels','SMSMessage':'SMSMessages','StatsShard':'StatsShards','Upload':'Uploads','Url':'Urls','User':'Users','UserImage':'UserImages','UserPhoneNumber':'UserPhoneNumbers','UserPreferences':'UserPreferences','UserProfile':'UserProfiles','UserProfileImage':'UserProfileImages','UserRole':'UserRoles','Variable':'Variables'}[string(str)]}function validateTimestampedData(data){return(data.createdAt is timestamp)&&(data.updatedAt is timestamp)&&((data.removedAt is timestamp)||data.removedAt==null)}function validateEntityData(data){return validateTimestampedData(data)&&((!data.keys().hasAll(['removedByEntityType'])||data.removedByEntityType==null)&&(!data.keys().hasAll(['removedByEntityId'])||data.removedByEntityId==null)&&(data.removedAt==null))||(entityExistsAfter(data.removedByEntityType,data.removedByEntityId)&&(data.removedAt is timestamp))}function validateEntity(resource){return resource.id.matches('^[a-zA-Z0-9]{20}$')&&validateEntityData(resource.data)}function entityExistsAfter(entityType,entityId){return existsAfter(/$(/databases/$(database)/documents)/$(pluralize(entityType))/$(entityId))}function getEntityAfter(entityType,entityId){return getAfter(/$(/databases/$(database)/documents)/$(pluralize(entityType))/$(entityId))}function currentUserCanReadPrivateEntity(auth,entity,userId){return(((auth.uid==entity.data.userId)&&(entity.data.removedAt==null))||((auth!=null&&auth.uid!=null)&&auth.uid==userId)||currentUserHasAdminRole(auth)||currentUserIsServiceAccount(auth))}function currentUserCanReadProtectedEntity(auth,entity){return(((entity.data.removedAt==null)&&(entity!=null))||currentUserHasAdminRole(auth)||currentUserIsServiceAccount(auth))}function currentUserCanReadPublicEntity(auth,entity,allowReadRemoved){return((allowReadRemoved||(entity.data.removedAt==null))||!(entity!=null)||currentUserHasAdminRole(auth)||currentUserIsServiceAccount(auth))}function currentUserCanCreateEntity(auth,entity){return(((auth!=null&&auth.uid!=null)&&currentUserIsValid(auth)&&(auth.uid==entity.data.userId))||currentUserHasAdminRole(auth)||currentUserIsServiceAccount(auth));}function currentUserCanUpdateEntity(auth,entity,allowRestores){return(((auth!=null&&auth.uid!=null)&&currentUserIsValid(auth)&&(auth.uid==entity.data.userId)&&(allowRestores||(entity.data.removedAt==null)))||currentUserHasAdminRole(auth)||currentUserIsServiceAccount(auth))}function buildAndGetIndexAfter(entityType,fieldsKey,fieldsValue){return getAfter(/$(/databases/$(database)/documents)/Indexes/$(/$(pluralize(entityType))/$(fieldsKey)/$(fieldsValue)))}function indexedIdMatchesAfter(entityType,fields,id){return(buildAndGetIndexAfter(entityType,fields.join('_'),props(fields,getEntityAfter(entityType,id).data).join('_')).data.value==id)}function indexedValueMatchesAfter(entityType,fieldsKey,fieldsValue){return(props(fieldsKey.split('_'),getEntityAfter(entityType,buildAndGetIndexAfter(entityType,fieldsKey,fieldsValue).data.value).data)==fieldsValue.split('_'))}function getAccessTokenAfter(id){return getAfter(/$(/databases/$(database)/documents)/AccessTokens/$(id))}function validateAccessToken(accessToken){return validateEntity(accessToken)&&(accessToken.data.token.matches('^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$')&&(accessToken.data.valid is bool)&&userExistsAfter(accessToken.data.userId))}function checkCreateAccessToken(auth,id){let accessToken=getAccessTokenAfter(id);return accessToken!=null&&currentUserIsServiceAccount(auth)&&validateAccessToken(accessToken);}function checkUpdateAccessToken(auth,id){let accessToken=getAccessTokenAfter(id);return accessToken!=null&&currentUserIsServiceAccount(auth)&&validateAccessToken(accessToken);}match/AccessTokens/{id}{allow read:if currentUserIsServiceAccount(request.auth);allow create:if checkCreateAccessToken(request.auth,id);allow update:if checkUpdateAccessToken(request.auth,id);allow delete:if currentUserIsServiceAccount(request.auth);}function getActionAfter(type,bucket,id){return getAfter(/$(/databases/$(database)/documents)/Actions/$(type)/$(bucket)/$(id))}function actionExistsAfter(type,bucket,id){return existsAfter(/$(/databases/$(database)/documents)/Actions/$(type)/$(bucket)/$(id))}function validateStorageObjectPayload(payload){return((payload.bucket is string)&&(!payload.keys().hasAll(['contentLanguage'])||(payload.contentLanguage is string))&&(payload.contentType is string)&&(payload.crc32c is string)&&(payload.etag is string)&&(payload.generation is string)&&(payload.id is string)&&(payload.kind is string)&&(payload.md5Hash is string)&&(payload.mediaLink is string)&&(!payload.keys().hasAll(['metadata'])||(payload.metadata is map))&&(payload.metageneration is int)&&(payload.name is string)&&(payload.selfLink is string)&&(payload.size is int)&&(payload.storageClass is string)&&(payload.timeCreated is string)&&(payload.timeStorageClassUpdated is string)&&(payload.updated is string))}function validateAction(action,type,id){return validateTimestampedData(action.data)&&action.id.matches('^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$')&&((action.data.action is map)&&(action.data.action.id==id&&action.data.action.type==type&&(action.data.action.source is string)&&action.data.action.specversion=='0.3-wip'&&(action.data.action.time is string)&&(action.data.action.payload is map)&&((type=='ENTITY_CHANGED'&&((action.data.action.payload.changeType is string)&&(action.data.action.payload.data==null||(action.data.action.payload.data is map))&&action.data.action.payload.entityPath.split('/').hasAll([pluralize(action.data.action.payload.entityType),action.data.action.payload.entityId])&&(action.data.action.payload.prevData==null||(action.data.action.payload.prevData is map))))||(type=='auth.UserRegisteredAction'&&((action.data.action.payload.data is map)&&(action.data.action.payload.method is string)&&userExistsAfter(action.data.action.payload.userId)))||(type=='STORAGE:OBJECT_DELETE'&&validateStorageObjectPayload(action.data.action.payload))||(type=='STORAGE:OBJECT_FINALIZE'&&validateStorageObjectPayload(action.data.action.payload))||(type=='STORAGE:OBJECT_METADATA_UPDATE'&&validateStorageObjectPayload(action.data.action.payload)))&&(!action.data.action.keys().hasAll(['meta'])||(type=='ENTITY_CHANGED'&&((action.data.action.meta.causedByEntityType==null&&action.data.action.meta.causedByEntityId==null)||entityExistsAfter(action.data.action.meta.causedByEntityType,action.data.action.meta.causedByEntityId))))))}function checkCreateQueueAction(auth,type,id){let action=getActionAfter(type,'queue',id);return(currentUserIsServiceAccount(auth)||currentUserHasAdminRole(auth)||(auth.causedByEntityType=='User'&&auth.causedByEntityId==action.data.action.meta))&&(validateAction(action,type,id)&&!actionExistsAfter(type,'processing',id)&&!actionExistsAfter(type,'resolved',id)&&!actionExistsAfter(type,'rejected',id));}match/Actions{match/{type}/queue/{id}{allow read:if currentUserIsServiceAccount(request.auth);allow create:if checkCreateQueueAction(request.auth,type,id)allow update:if false;allow delete:if currentUserIsServiceAccount(request.auth);}match/{type}/processing/{id}{allow read:if currentUserIsServiceAccount(request.auth);allow create:if(currentUserIsServiceAccount(request.auth)&&validateAction(getActionAfter(type,'processing',id),type,id)&&!actionExistsAfter(type,'queue',id)&&!actionExistsAfter(type,'resolved',id)&&!actionExistsAfter(type,'rejected',id))allow update:if false;allow delete:if currentUserIsServiceAccount(request.auth);}match/{type}/resolved/{id}{allow read:if currentUserIsServiceAccount(request.auth);allow create:if(currentUserIsServiceAccount(request.auth)&&validateAction(getActionAfter(type,'resolved',id),type,id)&&!actionExistsAfter(type,'queue',id)&&!actionExistsAfter(type,'processing',id)&&!actionExistsAfter(type,'rejected',id))allow update:if false;allow delete:if currentUserIsServiceAccount(request.auth);}match/{type}/rejected/{id}{allow read:if currentUserIsServiceAccount(request.auth);allow create:if(currentUserIsServiceAccount(request.auth)&&validateAction(getActionAfter(type,'rejected',id),type,id)&&!actionExistsAfter(type,'queue',id)&&!actionExistsAfter(type,'processing',id)&&!actionExistsAfter(type,'resolved',id))allow update:if false;allow delete:if currentUserIsServiceAccount(request.auth);}}match/ChannelContexts/{id}{allow read:if currentUserIsServiceAccount(request.auth);allow create:if(currentUserIsServiceAccount(request.auth)&&(validateEntity(getAfter(/$(/databases/$(database)/documents)/ChannelContexts/$(id)))&&(getAfter(/$(/databases/$(database)/documents)/ChannelContexts/$(id)).data.previous is map)&&smsChannelExistsAfter(getAfter(/$(/databases/$(database)/documents)/ChannelContexts/$(id)).data.channelId)));allow update:if false;allow delete:if currentUserIsServiceAccount(request.auth);}function getConversationAfter(id){return getAfter(/$(/databases/$(database)/documents)/Conversations/$(id))}function conversationExistsAfter(id){return existsAfter(/$(/databases/$(database)/documents)/Conversations/$(id))}function checkCreateConversation(auth,id){let conversation=getConversationAfter(id);return conversation!=null&&(validateEntity(conversation)&&(conversation.data.visibility is string))&&(currentUserWillBeConversationOwner(auth,conversation)||currentUserHasHilRole(auth)||currentUserHasAdminRole(auth)||currentUserIsServiceAccount(auth));}function checkUpdateConversation(auth,id){let conversationAfter=getConversationAfter(id);let conversationBefore=get(/$(/databases/$(database)/documents)/Conversations/$(id));return conversationAfter!=null&&conversationBefore!=null&&(validateEntity(conversationAfter)&&(conversationAfter.data.visibility is string))&&(currentUserIsConversationOwnerOrAdmin(auth,conversationBefore)||currentUserHasHilRole(auth)||currentUserHasAdminRole(auth)||currentUserIsServiceAccount(auth));}match/Conversations/{id}{allow read:if((resource.data.visibility=='PUBLIC'&&(resource.data.removedAt==null))||(currentUserIsConversationMember(request.auth,resource)&&(resource.data.removedAt==null))||currentUserHasHilRole(request.auth)||currentUserHasAdminRole(request.auth)||currentUserIsServiceAccount(request.auth));allow create:if checkCreateConversation(request.auth,id);allow update:if checkUpdateConversation(request.auth,id);allow delete:if currentUserIsServiceAccount(request.auth);}function getConversationMemberAfter(conversationId,userId){return getAfter(/$(/databases/$(database)/documents)/Conversations/$(conversationId)/ConversationMembers/$(userId))}function getConversationMemberBefore(conversationId,userId){return get(/$(/databases/$(database)/documents)/Conversations/$(conversationId)/ConversationMembers/$(userId))}function currentUserIsConversationMember(auth,conversation){let conversationMemberBefore=getConversationMemberBefore(conversation.id,auth.uid);return conversationMemberBefore!=null&&!(conversationMemberBefore.data.removedAt is timestamp);}function currentUserIsConversationOwnerOrAdmin(auth,conversation){let conversationMemberBefore=getConversationMemberBefore(conversation.id,auth.uid);return conversationMemberBefore!=null&&!(conversationMemberBefore.data.removedAt is timestamp)&&['ADMIN','OWNER'].hasAll([conversationMemberBefore.data.role]);}function currentUserWillBeConversationOwner(auth,conversation){let conversationMember=getConversationMemberAfter(conversation.id,auth.uid);return conversationMember.data.role=='OWNER';}function validateConversationMember(conversation,conversationMember){return validateEntity(conversationMember)&&conversationMember.id==conversationMember.data.userId&&(conversationExistsAfter(conversationMember.data.conversationId)&&conversationMember.data.conversationId==conversation.id&&userExistsAfter(conversationMember.data.userId)&&['ADMIN','HIL','MEMBER','OWNER'].hasAll([conversationMember.data.role]))}function checkReadConversationMember(auth,conversationId,userId,conversationMember){let conversation=getConversationAfter(conversationId);return(currentUserIsConversationMember(auth,conversation)||currentUserHasHilRole(auth)||currentUserHasAdminRole(auth)||currentUserIsServiceAccount(auth));}function checkCreateConversationMember(auth,conversationId,userId){let conversation=getConversationAfter(conversationId);let conversationMember=getConversationMemberAfter(conversationId,userId);return conversation!=null&&conversationMember!=null&&validateConversationMember(conversation,conversationMember)&&((conversation.data.visibility=='PUBLIC'&&conversationMember.data.role=='MEMBER'&&(auth.uid==conversationMember.data.userId))||currentUserIsConversationOwnerOrAdmin(auth,conversation)||currentUserHasHilRole(auth)||currentUserHasAdminRole(auth)||currentUserIsServiceAccount(auth));}function checkUpdateConversationMember(auth,conversationId,userId){let conversation=getConversationAfter(conversationId);let conversationMemberAfter=getConversationMemberAfter(conversationId,userId);let conversationMemberBefore=getConversationMemberBefore(conversationId,userId);return conversation!=null&&conversationMemberAfter!=null&&conversationMemberBefore!=null&&validateConversationMember(conversation,conversationMemberAfter)&&(((auth.uid==conversationMemberAfter.data.userId)&&(auth.uid==conversationMemberBefore.data.userId))||currentUserIsConversationOwnerOrAdmin(auth,conversation)||currentUserHasHilRole(auth)||currentUserHasAdminRole(auth)||currentUserIsServiceAccount(auth));}match/Conversations/{conversationId}/ConversationMembers/{userId}{allow read:if checkReadConversationMember(request.auth,conversationId,userId,resource);allow create:if checkCreateConversationMember(request.auth,conversationId,userId);allow update:if checkUpdateConversationMember(request.auth,conversationId,userId);allow delete:if currentUserIsServiceAccount(request.auth);}function getConversationMessageAfter(conversationId,messageId){return getAfter(/$(/databases/$(database)/documents)/Conversations/$(conversationId)/ConversationMessages/$(messageId))}function validateConversationMessage(conversation,conversationMessage){return validateEntity(conversationMessage)&&(conversationExistsAfter(conversationMessage.data.conversationId)&&userExistsAfter(conversationMessage.data.userId)&&conversationMessage.data.conversationId==conversation.id&&(conversationMessage.data.attachments==null||(conversationMessage.data.attachments is list))&&(conversationMessage.data.editedAt==null||(conversationMessage.data.editedAt is timestamp))&&(conversationMessage.data.sentAt==null||(conversationMessage.data.sentAt is timestamp))&&(conversationMessage.data.type is string))}function checkReadConversationMessage(auth,conversationId,conversationMessage){let conversation=getConversationAfter(conversationId);return((conversation.id==conversationMessage.data.conversationId&&currentUserIsConversationMember(auth,conversation))||currentUserHasHilRole(auth)||currentUserHasAdminRole(auth)||currentUserIsServiceAccount(auth));}function checkCreateConversationMessage(auth,conversationId,messageId){let conversation=getConversationAfter(conversationId);let conversationMessage=getConversationMessageAfter(conversationId,messageId);return conversation!=null&&conversationMessage!=null&&validateConversationMessage(conversation,conversationMessage)&&((currentUserIsConversationMember(auth,conversation)&&(auth.uid==conversationMessage.data.userId))||currentUserHasAdminRole(auth)||currentUserIsServiceAccount(auth));}function checkUpdateConversationMessage(auth,conversationId,messageId){let conversation=getConversationAfter(conversationId);let conversationMessageAfter=getConversationMessageAfter(conversationId,messageId);let conversationMessageBefore=get(/$(/databases/$(database)/documents)/Conversations/$(conversationId)/ConversationMessages/$(messageId));return conversation!=null&&conversationMessageAfter!=null&&conversationMessageBefore!=null&&validateConversationMessage(conversation,conversationMessageAfter)&&(((auth.uid==conversationMessageAfter.data.userId)&&(auth.uid==conversationMessageBefore.data.userId))||currentUserIsConversationOwnerOrAdmin(auth,conversation)||currentUserHasHilRole(auth)||currentUserHasAdminRole(auth)||currentUserIsServiceAccount(auth));}match/Conversations/{conversationId}/ConversationMessages/{messageId}{allow read:if checkReadConversationMessage(request.auth,conversationId,resource);allow create:if checkCreateConversationMessage(request.auth,conversationId,messageId);allow update:if checkUpdateConversationMessage(request.auth,conversationId,messageId);allow delete:if currentUserIsServiceAccount(request.auth);}function getEntityStatsAfter(id){return getAfter(/$(/databases/$(database)/documents)/EntityStats/$(id))}function validateEntityStats(resource){return validateEntity(resource)&&((resource.data.entityType is string)&&(resource.data.entityId is string)&&(resource.data.numberShards is number))}match/EntityStats/{id}{allow read:if currentUserCanReadPublicEntity(request.auth,resource,false);allow create:if currentUserIsServiceAccount(request.auth)&&validateEntityStats(getEntityStatsAfter(id))&&indexedIdMatchesAfter('EntityStats',['entityType','entityId'],id);allow update:if currentUserIsServiceAccount(request.auth)&&validateEntityStats(getEntityStatsAfter(id))&&indexedIdMatchesAfter('EntityStats',['entityType','entityId'],id);allow delete:if currentUserIsServiceAccount(request.auth);}match/Indexes/EntityStats/entityType_entityId/{entityType_entityId}{allow read:if currentUserIsServiceAccount(request.auth);allow create:if currentUserIsServiceAccount(request.auth)&&indexedValueMatchesAfter('EntityStats','entityType_entityId',entityType_entityId);allow delete:if currentUserIsServiceAccount(request.auth);}function getEntityStatsShardAfter(id,index){return getAfter(/$(/databases/$(database)/documents)/EntityStats/$(id)/StatsShards/$(index))}function validateEntityStatsShard(entity){return entity.id.matches('^[0-9]+$')&&validateEntityData(entity.data)&&((entity.data.data is map)&&(entity.data.index is number))}match/EntityStats/{id}/StatsShards/{index}{allow read:if currentUserCanReadPublicEntity(request.auth,resource,false);allow create:if currentUserIsServiceAccount(request.auth)&&validateEntityStatsShard(getEntityStatsShardAfter(id,index));allow update:if currentUserIsServiceAccount(request.auth)&&validateEntityStatsShard(getEntityStatsShardAfter(id,index));allow delete:if currentUserIsServiceAccount(request.auth);}function getErrorAfter(id){return getAfter(/$(/databases/$(database)/documents)/Errors/$(id))}function errorExistsAfter(id){return existsAfter(/$(/databases/$(database)/documents)/Errors/$(id))}function validateError(entity){return validateEntity(entity)&&(((entity.data.code is string)||entity.data.code==null)&&(entity.data.message is string)&&(entity.data.stack is string)&&(entity.data.source is string))}match/Errors/{id}{allow read:if currentUserIsServiceAccount(request.auth);allow create:if(currentUserIsServiceAccount(request.auth)&&validateError(getErrorAfter(id)));allow update:if(currentUserIsServiceAccount(request.auth)&&validateError(getErrorAfter(id)));allow delete:if currentUserIsServiceAccount(request.auth);}function getHostAfter(id){return getAfter(/$(/databases/$(database)/documents)/Hosts/$(id))}function validateHost(entity){return validateEntity(entity)&&((entity.data.domain is string)&&((entity.data.subDomain is string)||(entity.data.subDomain==null))&&(entity.data.topLevelDomain is string))}match/Hosts/{id}{allow read:if currentUserIsServiceAccount(request.auth);allow create:if(currentUserIsServiceAccount(request.auth)&&validateHost(getHostAfter(id)));allow update:if(currentUserIsServiceAccount(request.auth)&&validateHost(getHostAfter(id)));allow delete:if currentUserIsServiceAccount(request.auth);}function getImageAfter(id){return getAfter(/$(/databases/$(database)/documents)/Images/$(id))}function imageExistsAfter(id){return existsAfter(/$(/databases/$(database)/documents)/Images/$(id))}function validateImage(resource){return validateEntity(resource)&&(((resource.data.contentType is string)&&(resource.data.contentType=='image/jpg'||resource.data.contentType=='image/jpeg'||resource.data.contentType=='image/png'))&&((resource.data.hash is string)&&resource.data.hash.matches('^[a-z0-9]+$'))&&(resource.data.height is number)&&(resource.data.length is number)&&((resource.data.path is string)||!resource.data.keys().hasAll(['path']))&&(resource.data.storageBucket is string)&&(resource.data.width is number))}match/Images/{id}{allow read:if currentUserIsServiceAccount(request.auth);allow create:if currentUserIsServiceAccount(request.auth)&&validateImage(getImageAfter(id));allow update:if currentUserIsServiceAccount(request.auth)&&validateImage(getImageAfter(id));allow delete:if currentUserIsServiceAccount(request.auth);}function internalPhoneNumberExistsAfter(phoneNumberId){return existsAfter(/$(/databases/$(database)/documents)/InternalPhoneNumbers/$(phoneNumberId))}match/InternalPhoneNumbers/{phoneNumberId}{allow read:if currentUserCanReadProtectedEntity(request.auth,resource);allow create:if(validateEntity(getAfter(/$(/databases/$(database)/documents)/InternalPhoneNumbers/$(phoneNumberId)))&&phoneNumberExistsAfter(getAfter(/$(/databases/$(database)/documents)/InternalPhoneNumbers/$(phoneNumberId)).data.phoneNumberId)&&getPhoneNumberAfter(getAfter(/$(/databases/$(database)/documents)/InternalPhoneNumbers/$(phoneNumberId)).data.phoneNumberId).data.type=='internal')&&currentUserIsServiceAccount(request.auth);allow update:if false;allow delete:if currentUserIsServiceAccount(request.auth);}function getListAfter(id){return getAfter(/$(/databases/$(database)/documents)/Lists/$(id))}function validateList(resource){return validateEntity(resource)&&(((resource.data.parentEntityId==null)&&(resource.data.parentEntityType==null))||entityExistsAfter(resource.data.parentEntityType,resource.data.parentEntityId))}function checkCreateList(auth,id){let list=getListAfter(id);return list!=null&&validateList(list)&&currentUserIsServiceAccount(auth)}function checkUpdateList(auth,id){let list=getListAfter(id);return list!=null&&validateList(list)&&currentUserIsServiceAccount(auth)}match/Lists/{id}{allow read:if currentUserCanReadPublicEntity(request.auth,resource,false);allow create:if checkCreateList(request.auth,id);allow update:if checkUpdateList(request.auth,id);allow delete:if currentUserIsServiceAccount(request.auth);}function getListEntityAfter(id){return getAfter(/$(/databases/$(database)/documents)/ListEntities/$(id))}function validateListEntity(resource){return validateEntity(resource)&&(existsAfter(/$(/databases/$(database)/documents)/Lists/$(resource.data.listId))&&(((resource.data.index is int)&&resource.data.index>=0))&&entityExistsAfter(resource.data.entityType,resource.data.entityId))}function checkCreateListEntity(auth,id){let queueEntity=getListEntityAfter(id);return queueEntity!=null&&validateListEntity(queueEntity)&&indexedIdMatchesAfter('ListEntity',['listId','index'],id)&&currentUserIsServiceAccount(auth);}function checkUpdateListEntity(auth,id){let queueEntity=getListEntityAfter(id);return queueEntity!=null&&validateListEntity(queueEntity)&&indexedIdMatchesAfter('ListEntity',['listId','index'],id)&&currentUserIsServiceAccount(auth);}match/ListEntities/{id}{allow read:if currentUserCanReadPublicEntity(request.auth,resource,false);allow create:if checkCreateListEntity(request.auth,id);allow update:if checkUpdateListEntity(request.auth,id);allow delete:if currentUserIsServiceAccount(request.auth);}match/Indexes/ListEntities/listId_index/{listId_index}{allow read:if true;allow create:if indexedValueMatchesAfter('ListEntity','listId_index',listId_index);allow delete:if currentUserIsServiceAccount(request.auth);}function getNotificationAfter(id){return getAfter(/$(/databases/$(database)/documents)/Notifications/$(id))}function validateNotification(resource){return validateEntity(resource)&&(userExistsAfter(resource.data.userId)&&((resource.data.readAt is timestamp)||(resource.data.readAt==null))&&(resource.data.type is string)&&((resource.data.meta is map)||(resource.data.meta==null)))}match/Notifications/{id}{allow read:if currentUserCanReadPrivateEntity(request.auth,resource,resource.userId);allow create:if(validateNotification(getNotificationAfter(id))&&currentUserIsServiceAccount(request.auth));allow update:if(validateNotification(getNotificationAfter(id))&&currentUserCanUpdateEntity(request.auth,getNotificationAfter(id),false));allow delete:if currentUserIsServiceAccount(request.auth);}function getNotificationSendAfter(sendId,sendSendId){return getAfter(/$(/databases/$(database)/documents)/Notifications/$(sendId)/NotificationSends/$(sendSendId))}function validateNotificationSend(resource,sendAfter){return validateEntity(resource)&&((resource.data.channels is map)&&(errorExistsAfter(resource.data.errorId)||resource.data.errorId==null)&&resource.data.sendId==sendAfter.id&&((resource.data.sentAt is map)||resource.data.sentAt==null)&&['ABORTED','COMPLETED','ERROR','SENDING'].hasAll([resource.data.state]))}match/Notifications/{sendId}/NotificationSends/{sendSendId}{allow read:if currentUserCanReadPrivateEntity(request.auth,resource,resource.userId);allow create:if(currentUserIsServiceAccount(request.auth)&&validateNotificationSend(getNotificationSendAfter(sendId,sendSendId),getNotificationAfter(sendId)));allow update:if(currentUserIsServiceAccount(request.auth)&&validateNotificationSend(getNotificationSendAfter(sendId,sendSendId),get(/$(/databases/$(database)/documents)/Notifications/$(sendId))));allow delete:if currentUserIsServiceAccount(request.auth);}match/{somePath=**}/NotificationSends/{sendSendId}{allow read:if currentUserCanReadPrivateEntity(request.auth,resource,resource.userId);}function getPhoneNumberAfter(id){return getAfter(/$(/databases/$(database)/documents)/PhoneNumbers/$(id))}function phoneNumberExistsAfter(id){return existsAfter(/$(/databases/$(database)/documents)/PhoneNumbers/$(id))}function validatePhoneNumber(resource){return validateEntity(resource)&&((resource.data.hash is string)&&resource.data.hash.matches('^[a-z0-9]+$'))&&(resource.data.phoneNumber is string)&&((resource.data.type=='internal'&&internalPhoneNumberExistsAfter(resource.id))||(resource.data.type=='unclaimed'&&existsAfter(/$(/databases/$(database)/documents)/Indexes/$(/PhoneNumberClaims/phoneNumberId/$(resource.id))))||(resource.data.type=='user'&&userPhoneNumberExistsAfter(resource.id)))}match/PhoneNumbers/{id}{allow read:if currentUserIsServiceAccount(request.auth);allow create:if validatePhoneNumber(getPhoneNumberAfter(id))&&indexedIdMatchesAfter('PhoneNumber',['hash'],id)&&(currentUserIsServiceAccount(request.auth)||getPhoneNumberAfter(id).data.type=='unclaimed');allow update:if validatePhoneNumber(getPhoneNumberAfter(id))&&indexedIdMatchesAfter('PhoneNumber',['hash'],id)&&currentUserIsServiceAccount(request.auth);allow delete:if currentUserIsServiceAccount(request.auth);}match/Indexes/PhoneNumbers/hash/{hash}{allow read:if true;allow create:if indexedValueMatchesAfter('PhoneNumber','hash',hash);allow delete:if currentUserIsServiceAccount(request.auth);}function getPhoneNumberClaimAfter(id){return getAfter(/$(/databases/$(database)/documents)/PhoneNumberClaims/$(id))}match/PhoneNumberClaims/{id}{allow read:if currentUserCanReadProtectedEntity(request.auth,resource);allow create:if(validateEntity(getPhoneNumberClaimAfter(id))&&userExistsAfter(getPhoneNumberClaimAfter(id).data.userId)&&phoneNumberExistsAfter(getPhoneNumberClaimAfter(id).data.phoneNumberId)&&getPhoneNumberAfter(getPhoneNumberClaimAfter(id).data.phoneNumberId).data.type=='unclaimed')&&!userPhoneNumberExistsAfter(getPhoneNumberClaimAfter(id).data.phoneNumberId)&&indexedIdMatchesAfter('PhoneNumberClaim',['phoneNumberId'],id);allow update:if currentUserIsServiceAccount(request.auth);allow delete:if currentUserIsServiceAccount(request.auth);}match/Indexes/PhoneNumberClaims/phoneNumberId/{phoneNumberId}{allow read:if currentUserIsServiceAccount(request.auth);allow create:if indexedValueMatchesAfter('PhoneNumberClaim','phoneNumberId',phoneNumberId);allow delete:if currentUserIsServiceAccount(request.auth);}function getPreferenceAfter(id,key){return getAfter(/$(/databases/$(database)/documents)/UserPreferences/$(id)/Preferences/$(key))}function validatePreference(entity){return entity.data.key==entity.id&&validateEntityData(entity.data)&&(existsAfter(/$(/databases/$(database)/documents)/UserPreferences/$(entity.data.userPreferencesId))&&(entity.data.key is string)&&entity.data.keys().hasAll(['value']))}function checkCreatePreference(auth,id,key){let preference=getPreferenceAfter(id,key);return preference!=null&&validatePreference(preference)&&currentUserCanCreateEntity(auth,getUserPreferencesBefore(preference.userPreferencesId))}function checkUpdatePreference(auth,id,key){let preference=getPreferenceAfter(id,key);return preference!=null&&validatePreference(preference)&&currentUserCanUpdateEntity(auth,getUserPreferencesBefore(preference.userPreferencesId),true)}match/UserPreferences/{id}/Preferences/{key}{allow read:if currentUserCanReadPublicEntity(request.auth,resource,false);allow create:if checkCreatePreference(request.auth,id,key);allow update:if checkUpdatePreference(request.auth,id,key);allow delete:if currentUserIsServiceAccount(request.auth);}function getQueueAfter(id){return getAfter(/$(/databases/$(database)/documents)/Queues/$(id))}function validateQueue(resource){return validateEntity(resource)&&(((resource.data.parentEntityId==null)&&(resource.data.parentEntityType==null))||entityExistsAfter(resource.data.parentEtityType,resource.data.parentEntityId)&&((resource.data.headIndex is int)&&resource.data.headIndex>=0)&&(resource.data.length is int)&&(resource.data.tailIndex is int))}function checkCreateQueue(auth,id){let queue=getQueueAfter(id);return queue!=null&&validateQueue(queue)&&currentUserIsServiceAccount(auth);}function checkUpdateQueue(auth,id){let queue=getQueueAfter(id);return queue!=null&&validateQueue(queue)&&currentUserIsServiceAccount(auth);}function currentUserOwnsQueue(auth,queueId){return currentUserIsServiceAccount(auth)||currentUserHasAdminRole(auth)||(getQueueAfter(queueId).userId==auth.uid)}match/Queues/{id}{allow read:if currentUserCanReadPublicEntity(request.auth,resource,false);allow create:if checkCreateQueue(request.auth,id);allow update:if checkUpdateQueue(request.auth,id);allow delete:if currentUserIsServiceAccount(request.auth);}function getQueueEntityAfter(id,index){return getAfter(/$(/databases/$(database)/documents)/Queues/$(id)/QueueEntities/$(index))}function validateQueueEntity(entity){return entity.id.matches('^[0-9]+$')&&validateEntityData(entity.data)&&(existsAfter(/$(/databases/$(database)/documents)/Queues/$(entity.data.queueId))&&(entity.data.index is int)&&entityExistsAfter(entity.data.entityType,entity.data.entityId))}function checkCreateQueueEntity(auth,id,index){let queueEntity=getQueueEntityAfter(id,index);return queueEntity!=null&&validateQueueEntity(queueEntity)&&currentUserOwnsQueue(auth,queueEntity.queueId)}function checkUpdateQueueEntity(auth,id,index){let queueEntity=getQueueEntityAfter(id,index);return queueEntity!=null&&validateQueueEntity(queueEntity)&&currentUserOwnsQueue(auth,queueEntity.queueId)}match/Queues/{id}/QueueEntities/{index}{allow read:if currentUserCanReadPublicEntity(request.auth,resource,false);allow create:if checkCreateQueueEntity(request.auth,id,index);allow update:if checkUpdateQueueEntity(request.auth,id,index);allow delete:if currentUserIsServiceAccount(request.auth);}match/ServiceAccounts/{id}{allow read:if false;allow write:if false;}function validateSMSChallenge(resource){return validateEntity(resource)&&(resource.data.code is string)&&(resource.data.expiresIn is string)&&phoneNumberExistsAfter(resource.data.phoneNumberId)&&smsChannelExistsAfter(resource.data.smsChannelId)&&((resource.data.usedAt is timestamp)||!resource.data.keys().hasAll(['usedAt']))&&(resource.data.valid is bool)}match/SMSChallenges/{id}{allow read:if currentUserIsServiceAccount(request.auth);allow create:if currentUserIsServiceAccount(request.auth)&&validateSMSChallenge(getAfter(/$(/databases/$(database)/documents)/SMSChallenges/$(id)));allow update:if currentUserIsServiceAccount(request.auth)&&validateSMSChallenge(resource);allow delete:if currentUserIsServiceAccount(request.auth);}function smsChannelExistsAfter(id){return existsAfter(/$(/databases/$(database)/documents)/SMSChannels/$(id))}function validateSMSChannel(resource){return validateEntity(resource)&&internalPhoneNumberExistsAfter(resource.data.internalPhoneNumberId)&&phoneNumberExistsAfter(resource.data.userPhoneNumberId)}match/SMSChannels/{id}{allow read:if currentUserIsServiceAccount(request.auth)allow create:if(currentUserIsServiceAccount(request.auth)&&validateSMSChannel(getAfter(/$(/databases/$(database)/documents)/SMSChannels/$(id)))&&indexedIdMatchesAfter('SMSChannel',['userPhoneNumberId','internalPhoneNumberId'],id))allow update:if currentUserIsServiceAccount(request.auth)&&validateSMSChannel(resource)&&indexedIdMatchesAfter('SMSChannel',['userPhoneNumberId','internalPhoneNumberId'],id);allow delete:if currentUserIsServiceAccount(request.auth);}match/Indexes/SMSChannels/userPhoneNumberId_internalPhoneNumberId/{userPhoneNumberId_internalPhoneNumberId}{allow read:if currentUserIsServiceAccount(request.auth);allow create:if currentUserIsServiceAccount(request.auth)&&indexedValueMatchesAfter('SMSChannel','userPhoneNumberId_internalPhoneNumberId',userPhoneNumberId_internalPhoneNumberId);allow delete:if currentUserIsServiceAccount(request.auth);}match/SMSMessages/{id}{allow read:if currentUserIsServiceAccount(request.auth);allow write:if currentUserIsServiceAccount(request.auth);}function getUploadAfter(id){return getAfter(/$(/databases/$(database)/documents)/Uploads/$(id))}function validateUpload(resource){return validateEntity(resource)&&(userExistsAfter(resource.data.userId)&&(errorExistsAfter(resource.data.errorId)||resource.data.errorId==null)&&((resource.data.meta is map)||!resource.data.keys().hasAll(['meta']))&&(resource.data.source is string)&&['CANCELED','COMPLETED','ERROR','PAUSED','POST_PROCESSING','RUNNING','SUCCESS'].hasAll([resource.data.state]))}function checkCreateUpload(auth,id){let upload=getUploadAfter(id);return upload!=null&&validateUpload(upload)&&currentUserCanCreateEntity(auth,upload)}function checkUpdateUpload(auth,id){let upload=getUploadAfter(id);return upload!=null&&currentUserIsServiceAccount(auth)&&validateUpload(upload)}match/Uploads/{id}{allow read:if currentUserCanReadPrivateEntity(request.auth,resource,resource.userId);allow create:if checkCreateUpload(request.auth,id);allow update:if checkUpdateUpload(request.auth,id);allow delete:if currentUserIsServiceAccount(request.auth);}function getUrlAfter(id){return getAfter(/$(/databases/$(database)/documents)/Urls/$(id))}function validateUrl(entity){return validateEntity(entity)&&(((entity.data.hash is string)||(entity.data.hash==null))&&existsAfter(/$(/databases/$(database)/documents)/Hosts/$(entity.data.hostId))&&(entity.data.pathname is string)&&((entity.data.port is number)||(entity.data.port==null))&&(entity.data.protocol is string)&&((entity.data.search is string)||(entity.data.search==null)));}function checkCreateUrl(auth,id){let urlAfter=getUrlAfter(id);return currentUserIsServiceAccount(auth)&&validateUrl(urlAfter);}function checkUpdateUrl(auth,id){let urlAfter=getUrlAfter(id);return currentUserIsServiceAccount(auth)&&validateUrl(urlAfter);}match/Urls/{id}{allow read:if currentUserIsServiceAccount(request.auth);allow create:if checkCreateUrl(request.auth,id);allow update:if checkUpdateUrl(request.auth,id);allow delete:if currentUserIsServiceAccount(request.auth);}function getUserAfter(id){return getAfter(/$(/databases/$(database)/documents)/Users/$(id))}function userExistsAfter(id){return existsAfter(/$(/databases/$(database)/documents)/Users/$(id))}match/Users/{id}{allow read:if currentUserCanReadProtectedEntity(request.auth,resource);allow create:if(validateEntity(getUserAfter(id))&&((getUserAfter(id).data.name is string)||!getUserAfter(id).data.keys().hasAll(['name']))&&(getUserAfter(id).data.state is string)&&(getUserAfter(id).data.state=='disabled'||getUserAfter(id).data.state=='pending'||getUserAfter(id).data.state=='valid'))&&(currentUserIsServiceAccount(request.auth)||(getUserAfter(id).data.state=='pending'));allow update:if currentUserIsServiceAccount(request.auth)allow delete:if currentUserIsServiceAccount(request.auth);}function userPhoneNumberExistsAfter(phoneNumberId){return existsAfter(/$(/databases/$(database)/documents)/UserPhoneNumbers/$(phoneNumberId))}match/UserPhoneNumbers/{phoneNumberId}{allow read:if currentUserCanReadProtectedEntity(request.auth,resource);allow create:if(getAfter(/$(/databases/$(database)/documents)/UserPhoneNumbers/$(phoneNumberId)).id==getAfter(/$(/databases/$(database)/documents)/UserPhoneNumbers/$(phoneNumberId)).data.phoneNumberId&&userExistsAfter(getAfter(/$(/databases/$(database)/documents)/UserPhoneNumbers/$(phoneNumberId)).data.userId)&&phoneNumberExistsAfter(getAfter(/$(/databases/$(database)/documents)/UserPhoneNumbers/$(phoneNumberId)).data.phoneNumberId)&&getPhoneNumberAfter(getAfter(/$(/databases/$(database)/documents)/UserPhoneNumbers/$(phoneNumberId)).data.phoneNumberId).data.type=='user')&&currentUserIsServiceAccount(request.auth);allow update:if false;allow delete:if currentUserIsServiceAccount(request.auth);}function getUserPreferencesAfter(id){return getAfter(/$(/databases/$(database)/documents)/UserPreferences/$(id))}function getUserPreferencesBefore(id){return get(/$(/databases/$(database)/documents)/UserPreferences/$(id))}function validateUserPreferences(userPreferences){return validateEntity(userPreferences)&&userPreferences.id==userPreferences.data.userId&&userExistsAfter(userPreferences.data.userId);}function checkCreateUserPreferences(auth,id){let userPreferencesAfter=getUserPreferencesAfter(id);return validateUserPreferences(userPreferencesAfter)&&id==userPreferencesAfter.data.userId&&currentUserCanCreateEntity(auth,userPreferencesAfter);}function checkUpdateUserPreferences(auth,id){let userPreferencesAfter=getUserPreferencesAfter(id);let userPreferencesBefore=getUserPreferencesBefore(id);return validateUserPreferences(userPreferencesAfter)&&id==userPreferencesAfter.data.userId&&currentUserCanUpdateEntity(auth,userPreferencesBefore,false);}match/UserPreferences/{id}{allow read:if currentUserCanReadPrivateEntity(request.auth,resource,false);allow create:if checkCreateUserPreferences(request.auth,id);allow update:if checkUpdateUserPreferences(request.auth,id);allow delete:if currentUserIsServiceAccount(request.auth);}function getUserProfileAfter(id){return getAfter(/$(/databases/$(database)/documents)/UserProfiles/$(id))}function validateUserProfile(userProfile){return validateEntity(userProfile)&&userProfile.id==userProfile.data.userId&&((userProfile.data.name is string)&&userExistsAfter(userProfile.data.userId)&&(!userProfile.data.keys().hasAll(['bio'])||(userProfile.data.bio is string))&&(!userProfile.data.keys().hasAll(['location'])||(userProfile.data.location is string))&&(!userProfile.data.keys().hasAll(['website'])||(userProfile.data.website is string))&&(!userProfile.data.keys().hasAll(['userProfileImageId'])||existsAfter(/$(/databases/$(database)/documents)/UserProfileImages/$(userProfile.data.userProfileImageId))));}function checkCreateUserProfile(auth,id){let userProfileAfter=getUserProfileAfter(id);return validateUserProfile(userProfileAfter)&&id==userProfileAfter.data.userId&&currentUserCanCreateEntity(auth,userProfileAfter);}function checkUpdateUserProfile(auth,id){let userProfileAfter=getUserProfileAfter(id);let userProfileBefore=get(/$(/databases/$(database)/documents)/UserProfiles/$(id));return validateUserProfile(userProfileAfter)&&id==userProfileAfter.data.userId&&currentUserCanUpdateEntity(auth,userProfileBefore,false);}match/UserProfiles/{id}{allow read:if currentUserCanReadPublicEntity(request.auth,resource,false);allow create:if checkCreateUserProfile(request.auth,id);allow update:if checkUpdateUserProfile(request.auth,id);allow delete:if currentUserIsServiceAccount(request.auth);}match/UserProfileImages/{id}{allow read:if currentUserCanReadPublicEntity(request.auth,resource,false);allow create:if currentUserIsServiceAccount(request.auth)&&(validateTimestampedData(getAfter(/$(/databases/$(database)/documents)/UserProfileImages/$(id)).data)&&userExistsAfter(getAfter(/$(/databases/$(database)/documents)/UserProfileImages/$(id)).data.userId)&&imageExistsAfter(getAfter(/$(/databases/$(database)/documents)/UserProfileImages/$(id)).data.imageId))&&indexedIdMatchesAfter('UserProfileImage',['userId','imageId'],id);allow update:if false;allow delete:if currentUserIsServiceAccount(request.auth);}match/Indexes/UserProfileImages/userId_imageId/{userId_imageId}{allow read:if currentUserIsServiceAccount(request.auth);allow create:if currentUserIsServiceAccount(request.auth)&&indexedValueMatchesAfter('UserProfileImage','userId_imageId',userId_imageId);allow delete:if currentUserIsServiceAccount(request.auth);}function getUserRoleAfter(id){return getAfter(/$(/databases/$(database)/documents)/UserRoles/$(id))}function getUserRoleBefore(id){return exists(/$(/databases/$(database)/documents)/UserRoles/$(id))? get(/$(/databases/$(database)/documents)/UserRoles/$(id)):null}function validateUserRole(resource){return validateEntity(resource)&&resource.id==resource.data.userId&&userExistsAfter(resource.data.userId)&&resource.data.role=='admin' }match/UserRoles/{id}{allow read:if currentUserCanReadPrivateEntity(request.auth,resource,id)allow create:if currentUserIsServiceAccount(request.auth)&&validateUserRole(getUserRoleAfter(id));allow update:if currentUserIsServiceAccount(request.auth)&&validateUserRole(getUserRoleAfter(id));allow delete:if currentUserIsServiceAccount(request.auth);}function getVariableAfter(id){return getAfter(/$(/databases/$(database)/documents)/Variables/$(id))}function validateVariable(resource){return validateTimestampedData(resource.data)&&(resource.id is string)&&resource.data.keys().hasAll(['value'])}match/Variables/{id}{allow read:if currentUserCanReadPublicEntity(request.auth,resource,false);allow create:if validateVariable(getVariableAfter(id))&&currentUserIsServiceAccount(request.auth);allow update:if validateVariable(getVariableAfter(id))&&currentUserIsServiceAccount(request.auth);allow delete:if currentUserIsServiceAccount(request.auth);}function getUserImageAfter(id){return getAfter(/$(/databases/$(database)/documents)/UserImages/$(id))}function validateUserImage(resource){return validateEntity(resource)&&imageExistsAfter(resource.data.imageId)&&userExistsAfter(resource.data.userId)}match/UserImages/{id}{allow read:if currentUserCanReadPublicEntity(request.auth,resource,false);allow create:if currentUserIsServiceAccount(request.auth)&&validateUserImage(getUserImageAfter(id))&&indexedIdMatchesAfter('UserImage',['userId','imageId'],id);allow update:if currentUserIsServiceAccount(request.auth)&&validateUserImage(getUserImageAfter(id))&&indexedIdMatchesAfter('UserImage',['userId','imageId'],id);allow delete:if currentUserIsServiceAccount(request.auth);}match/Indexes/UserImages/userId_imageId/{userId_imageId}{allow read:if currentUserIsServiceAccount(request.auth);allow create:if currentUserIsServiceAccount(request.auth)&&indexedValueMatchesAfter('UserImage','userId_imageId',userId_imageId);allow delete:if currentUserIsServiceAccount(request.auth);}}}"`;
