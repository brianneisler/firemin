#!/usr/bin/env node

const { resolve } = require('path')

const program = require('commander')
const pino = require('pino')

const { minimize, setupContext } = require('../index.bin')

program
  .description('minimize a firebase firestore rules file')
  .option(
    '-f, --filePath [filePath]',
    'The relative file path to the rule file (defaults to ./firestore.rules)',
    resolve('./firestore.rules')
  )
  .option(
    '-o, --outputFilePath [outputFilePath]',
    'the relative file path to output the new minimized file (defaults to ./firestore.min.rules)',
    resolve('./firestore.min.rules')
  )
  .parse(process.argv)

const exec = async (options) => {
  const startTime = Date.now()
  const context = setupContext()
  const { logger } = context
  logger.info('running...')

  const finalLogger = pino.final(logger)
  try {
    await minimize(context, options)
    const duration = ((Date.now() - startTime) / 1000).toFixed(2)
    logger.info()
    logger.info(
      `Minimized rules file in ${duration}s and output to ${options.outputFilePath}`
    )
  } catch (error) {
    finalLogger.warn('An error occured while trying to minimize the rules file')
    throw error
  }
}

exec(program)
  // .then(() => process.exit())
  .catch((error) => {
    // eslint-disable-next-line no-console
    console.error(error)
    process.exit(1)
  })
